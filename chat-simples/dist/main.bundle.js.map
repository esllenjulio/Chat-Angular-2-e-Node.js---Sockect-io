{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,mB;;;;;;;ACAA,60BAA60B,KAAK,4PAA4P,KAAK,6D;;;;;;;;;;;;;;;;;;;;;ACAziC;AACH;AAQvC;IAQE;QAAA,iBAQC;QAdD,cAAS,GAAW,EAAE,CAAC;QACvB,0BAAqB,GAAU,EAAE,CAAC;QAClC,0BAAqB,GAAU,EAAE,CAAC;QAKhC,IAAI,CAAC,MAAM,GAAG,8CAAE,EAAE,CAAC;QACnB,uCAAuC;QAEvC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,UAAC,GAAG;YACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,KAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;IAID;yCACqC;IAC9B,qCAAc,GAArB,UAAsB,YAAiB;QAErC,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IAExC,CAAC;IAGD,gFAAgF;IAChF,gDAAyB,GAAzB,UAA0B,GAAQ;QAChC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC;IACtC,CAAC;IAED,gDAAyB,GAAzB,UAA0B,GAAQ;QAChC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC;IACtC,CAAC;IArCU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,YAAY,CAuCxB;IAAD,mBAAC;CAAA;AAvCwB;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AAGM;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBAEP,gFAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;AClBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;ACXlC,e","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div> - </div>\\n\\n<div> - </div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleFormControlInput1\\\">Chat online Angular 2 e Node.js - com Sockect-io </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"novaMensagem\\\" placeholder=\\\"Mensagem\\\" #mensagem>\\n      </div>\\n      <button type=\\\"button\\\" for=\\\"novaMensagem\\\" class=\\\"btn btn-success\\\" (click)=\\\"enviarMensagem(mensagem.value)\\\">Enviar Mensagem</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div> - </div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm\\\">\\n      <label for=\\\"\\\">Enviadas:</label>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\" *ngFor=\\\"let msg of listaMensagemEnviadas\\\">\\n          {{msg}}\\n        </li>\\n      </ul>\\n\\n    </div>\\n\\n    <div class=\\\"col-sm\\\">\\n      <label for=\\\"\\\">Recebidas:</label>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\" *ngFor=\\\"let msg of listaMensagemRecebida\\\">\\n          {{msg}}\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  msgRetorn: string = '';\n  listaMensagemRecebida: any[] = [];\n  listaMensagemEnviadas: any[] = [];\n\n  socket;\n\n  constructor() {\n    this.socket = io();\n    // this.socket.emit('msg', \"seu nome\");\n\n    this.socket.on('msg', (msg) => {\n      console.log(msg)\n      this.adicionarMensagemRecebida(msg)\n    })\n  }\n\n\n\n  /* metodo usado para enviar uma nova mensagem \n  para o servidor atraves do sockect */\n  public enviarMensagem(novaMensagem: any): void {\n\n    this.adicionarMensagemEnviadas(novaMensagem)\n    this.socket.emit('msg', novaMensagem);\n\n  }\n\n\n  /* metodo usado para receber a nova mensagem e adicionar no array listaMesagem*/\n  adicionarMensagemRecebida(msg: any) {\n    this.listaMensagemRecebida.push(msg)\n  }\n\n  adicionarMensagemEnviadas(msg: any) {\n    this.listaMensagemEnviadas.push(msg)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n   \n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}